{"version":3,"sources":["js/simple-adaptive-slider.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","e","document","createEvent","initCustomEvent","WRAPPER_SELECTOR","ITEMS_SELECTOR","ITEM_SELECTOR","ITEM_CLASS_ACTIVE","CONTROL_SELECTOR","CONTROL_CLASS_SHOW","INDICATOR_WRAPPER_ELEMENT","INDICATOR_WRAPPER_CLASS","INDICATOR_ITEM_ELEMENT","INDICATOR_ITEM_CLASS","INDICATOR_ITEM_CLASS_ACTIVE","SWIPE_THRESHOLD","TRANSITION_NONE","SimpleAdaptiveSlider","constructor","selector","config","key","_$root","querySelector","_$wrapper","_$items","_$itemList","querySelectorAll","_currentIndex","_minOrder","_maxOrder","_$itemWithMinOrder","_$itemWithMaxOrder","_minTranslate","_maxTranslate","_direction","_balancingItemsFlag","_transform","_hasSwipeState","_swipeStartPosX","_intervalId","_config","loop","autoplay","interval","swipe","hasOwnProperty","i","length","dataset","order","index","translate","count","transformValue","concat","style","transform","_addIndicators","_refreshExtremeValues","_setActiveClass","_addEventListener","_autoplay","$item","parseInt","classList","add","remove","$indicators","slideTo","$controls","_move","condition","step","_moveTo","currentIndex","Math","abs","action","clearInterval","setInterval","bind","$wrapper","createElement","className","appendChild","$itemList","_balancingItems","wrapperRect","getBoundingClientRect","halfWidthItem","width","wrapperLeft","left","$min","right","wrapperRight","$max","requestAnimationFrame","$items","onSwipeStart","type","search","touches","clientX","_swipeStartPosY","clientY","_hasSwiping","onSwipeMove","diffPosX","diffPosY","preventDefault","value","translateX","onSwipeEnd","changedTouches","addEventListener","onClick","$target","target","contains","slide","onTransitionStart","onTransitionEnd","dispatchEvent","onMouseEnter","onMouseLeave","supportsPassive","opts","Object","defineProperty","get","err","passive","onDragStart","onVisibilityChange","visibilityState","next","prev"],"mappings":"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","file":"simple-adaptive-slider.3e303771.js","sourceRoot":"../src","sourcesContent":["/**\n * SimpleAdaptiveSlider by Itchief v2.0.0 (https://github.com/itchief/ui-components/tree/master/simple-adaptive-slider)\n * Copyright 2020 - 2021 Alexander Maltsev\n * Licensed under MIT (https://github.com/itchief/ui-components/blob/master/LICENSE)\n */\n\n(function() {\n  if (typeof window.CustomEvent === 'function' ) return false;\n  function CustomEvent(event, params) {\n    params = params || {bubbles: false, cancelable: false, detail: null};\n    var e = document.createEvent('CustomEvent');\n    e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return e;\n  }\n  window.CustomEvent = CustomEvent;\n})();\n\n// базовые классы и селекторы\nvar WRAPPER_SELECTOR = '.slider__wrapper';\nvar ITEMS_SELECTOR = '.slider__items';\nvar ITEM_SELECTOR = '.slider__item';\nvar ITEM_CLASS_ACTIVE = 'slider__item_active';\nvar CONTROL_SELECTOR = '.slider__control';\nvar CONTROL_CLASS_SHOW = 'slider__control_show';\n// индикаторы\nvar INDICATOR_WRAPPER_ELEMENT = 'ol';\nvar INDICATOR_WRAPPER_CLASS = 'slider__indicators';\nvar INDICATOR_ITEM_ELEMENT = 'li';\nvar INDICATOR_ITEM_CLASS = 'slider__indicator';\nvar INDICATOR_ITEM_CLASS_ACTIVE = 'slider__indicator_active';\n// порог для переключения слайда (40%)\nvar SWIPE_THRESHOLD = 20;\n// класс для отключения transition\nvar TRANSITION_NONE = 'transition-none';\n\nclass SimpleAdaptiveSlider {\n  constructor(selector, config) {\n    // .slider\n    this._$root = document.querySelector(selector);\n    // .slider__wrapper\n    this._$wrapper = this._$root.querySelector(WRAPPER_SELECTOR);\n    // .slider__items\n    this._$items = this._$root.querySelector(ITEMS_SELECTOR);\n    // .slider__item\n    this._$itemList = this._$root.querySelectorAll(ITEM_SELECTOR);\n    // текущий индекс\n    this._currentIndex = 0;\n    // экстремальные значения слайдов\n    this._minOrder = 0;\n    this._maxOrder = 0;\n    this._$itemWithMinOrder = null;\n    this._$itemWithMaxOrder = null;\n    this._minTranslate = 0;\n    this._maxTranslate = 0;\n    // направление смены слайдов (по умолчанию)\n    this._direction = 'next';\n    // флаг, который показывает, что идёт процесс уравновешивания слайдов\n    this._balancingItemsFlag = false;\n    // текущее значение трансформации\n    this._transform = 0;\n    // swipe параметры\n    this._hasSwipeState = false;\n    this._swipeStartPosX = 0;\n    // id таймера\n    this._intervalId = null;\n    // конфигурация слайдера (по умолчанию)\n    this._config = {\n      loop: true,\n      autoplay: false,\n      interval: 5000,\n      swipe: true,\n    };\n    // изменяем конфигурацию слайдера в соответствии с переданными настройками\n    for (var key in config) {\n      if (this._config.hasOwnProperty(key)) {\n        this._config[key] = config[key];\n      }\n    }\n    // добавляем к слайдам data-атрибуты\n    for (var i = 0, length = this._$itemList.length; i < length; i++) {\n      this._$itemList[i].dataset.order = i;\n      this._$itemList[i].dataset.index = i;\n      this._$itemList[i].dataset.translate = 0;\n    }\n    // перемещаем последний слайд перед первым\n    if (this._config.loop) {\n      var count = this._$itemList.length - 1;\n      var translate = -this._$itemList.length * 100;\n      this._$itemList[count].dataset.order = -1;\n      this._$itemList[count].dataset.translate = -this._$itemList.length * 100;\n      var transformValue = 'translateX('.concat(translate, '%)');\n      this._$itemList[count].style.transform = transformValue;\n    }\n    // добавляем индикаторы к слайдеру\n    this._addIndicators();\n    // обновляем экстремальные значения переменных\n    this._refreshExtremeValues();\n    // помечаем активные элементы\n    this._setActiveClass();\n    // назначаем обработчики\n    this._addEventListener();\n    // запускаем автоматическую смену слайдов\n    this._autoplay();\n  }\n  // set active class\n  _setActiveClass() {\n    // slides\n    var i;\n    var length;\n    var $item;\n    var index;\n    for (i = 0, length = this._$itemList.length; i < length; i++) {\n      $item = this._$itemList[i];\n      index = parseInt($item.dataset.index);\n      if (this._currentIndex === index) {\n        $item.classList.add(ITEM_CLASS_ACTIVE);\n      } else {\n        $item.classList.remove(ITEM_CLASS_ACTIVE);\n      }\n    }\n    // indicators\n    var $indicators = this._$root.querySelectorAll('.' + INDICATOR_ITEM_CLASS);\n    if ($indicators.length) {\n      for (i = 0, length = $indicators.length; i < length; i++) {\n        $item = $indicators[i];\n        index = parseInt($item.dataset.slideTo);\n        if (this._currentIndex === index) {\n          $item.classList.add(INDICATOR_ITEM_CLASS_ACTIVE);\n        } else {\n          $item.classList.remove(INDICATOR_ITEM_CLASS_ACTIVE);\n        }\n      }\n    }\n    // controls\n    var $controls = this._$root.querySelectorAll(CONTROL_SELECTOR);\n    if (!$controls.length) {\n      return;\n    }\n    if (this._config.loop) {\n      for (i = 0, length = $controls.length; i < length; i++) {\n        $controls[i].classList.add(CONTROL_CLASS_SHOW);\n      }\n    } else {\n      if (this._currentIndex === 0) {\n        $controls[0].classList.remove(CONTROL_CLASS_SHOW);\n        $controls[1].classList.add(CONTROL_CLASS_SHOW);\n      } else if (this._currentIndex === this._$itemList.length - 1) {\n        $controls[0].classList.add(CONTROL_CLASS_SHOW);\n        $controls[1].classList.remove(CONTROL_CLASS_SHOW);\n      } else {\n        $controls[0].classList.add(CONTROL_CLASS_SHOW);\n        $controls[1].classList.add(CONTROL_CLASS_SHOW);\n      }\n    }\n  }\n  // смена слайдов\n  _move() {\n    if (this._direction === 'none') {\n      this._$items.classList.remove(TRANSITION_NONE);\n      this._$items.style.transform = 'translateX('.concat(this._transform, '%)');\n      return;\n    }\n    if (!this._config.loop) {\n      var condition = this._currentIndex + 1 >= this._$itemList.length;\n      if (condition && this._direction === 'next') {\n        this._autoplay('stop');\n        return;\n      }\n      if (this._currentIndex <= 0 && this._direction === 'prev') {\n        return;\n      }\n    }\n    var step = this._direction === 'next' ? -100 : 100;\n    var transform = this._transform + step;\n    if (this._direction === 'next') {\n      if (++this._currentIndex > this._$itemList.length - 1) {\n        this._currentIndex -= this._$itemList.length;\n      }\n    } else {\n      if (--this._currentIndex < 0) {\n        this._currentIndex += this._$itemList.length;\n      }\n    }\n    this._transform = transform;\n    this._$items.style.transform = 'translateX('.concat(transform, '%)');\n    this._setActiveClass();\n  }\n  // функция для перемещения к слайду по индексу\n  _moveTo(index) {\n    var currentIndex = this._currentIndex;\n    this._direction = index > currentIndex ? 'next' : 'prev';\n    for (var i = 0; i < Math.abs(index - currentIndex); i++) {\n      this._move();\n    }\n  }\n  // метод для автоматической смены слайдов\n  _autoplay(action) {\n    if (!this._config.autoplay) {\n      return;\n    }\n    if (action === 'stop') {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n      return;\n    }\n    if (this._intervalId === null) {\n      this._intervalId = setInterval(function () {\n        this._direction = 'next';\n        this._move();\n      }.bind(this),\n        this._config.interval\n      );\n    }\n  }\n  // добавление индикаторов\n  _addIndicators() {\n    if (this._$root.querySelector('.' + INDICATOR_WRAPPER_CLASS)) {\n      return;\n    }\n    var $wrapper = document.createElement(INDICATOR_WRAPPER_ELEMENT);\n    $wrapper.className = INDICATOR_WRAPPER_CLASS;\n    for (var i = 0, length = this._$itemList.length; i < length; i++) {\n      var $item = document.createElement(INDICATOR_ITEM_ELEMENT);\n      $item.className = INDICATOR_ITEM_CLASS;\n      $item.dataset.slideTo = i;\n      $wrapper.appendChild($item);\n    }\n    this._$root.appendChild($wrapper);\n  }\n  // refresh extreme values\n  _refreshExtremeValues() {\n    var $itemList = this._$itemList;\n    this._minOrder = parseInt($itemList[0].dataset.order);\n    this._maxOrder = this._minOrder;\n    this._$itemWithMinOrder = $itemList[0];\n    this._$itemWithMaxOrder = this._$itemWithMinOrder;\n    this._minTranslate = parseInt($itemList[0].dataset.translate);\n    this._maxTranslate = this._minTranslate;\n    for (var i = 0, length = $itemList.length; i < length; i++) {\n      var $item = $itemList[i];\n      var order = parseInt($item.dataset.order);\n      if (order < this._minOrder) {\n        this._minOrder = order;\n        this._$itemWithMinOrder = $item;\n        this._minTranslate = parseInt($item.dataset.translate);\n      } else if (order > this._maxOrder) {\n        this._maxOrder = order;\n        this._$itemWithMaxOrder = $item;\n        this._minTranslate = parseInt($item.dataset.translate);\n      }\n    }\n  }\n  // balancing items\n  _balancingItems() {\n    if (!this._balancingItemsFlag) {\n      return;\n    }\n    var $wrapper = this._$wrapper;\n    var wrapperRect = $wrapper.getBoundingClientRect();\n    var halfWidthItem = wrapperRect.width / 2;\n    var count = this._$itemList.length;\n    var translate;\n    var clientRect;\n    if (this._direction === 'next') {\n      var wrapperLeft = wrapperRect.left;\n      var $min = this._$itemWithMinOrder;\n      translate = this._minTranslate;\n      clientRect = $min.getBoundingClientRect();\n      if (clientRect.right < wrapperLeft - halfWidthItem) {\n        $min.dataset.order = this._minOrder + count;\n        translate += count * 100;\n        $min.dataset.translate = translate;\n        $min.style.transform = 'translateX('.concat(translate, '%)');\n        this._refreshExtremeValues();\n      }\n    } else if (this._direction === 'prev') {\n      var wrapperRight = wrapperRect.right;\n      var $max = this._$itemWithMaxOrder;\n      translate = this._maxTranslate;\n      clientRect = $max.getBoundingClientRect();\n      if (clientRect.left > wrapperRight + halfWidthItem) {\n        $max.dataset.order = this._maxOrder - count;\n        translate -= count * 100;\n        $max.dataset.translate = translate;\n        $max.style.transform = 'translateX('.concat(translate, '%)');\n        this._refreshExtremeValues();\n      }\n    }\n    requestAnimationFrame(this._balancingItems.bind(this));\n  }\n  // adding listeners\n  _addEventListener() {\n    var $items = this._$items;\n    function onClick(e) {\n      var $target = e.target;\n      this._autoplay('stop');\n      if ($target.classList.contains('slider__control')) {\n        e.preventDefault();\n        this._direction = $target.dataset.slide;\n        this._move();\n      } else if ($target.dataset.slideTo) {\n        e.preventDefault();\n        var index = parseInt($target.dataset.slideTo);\n        this._moveTo(index);\n      }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    function onTransitionStart() {\n      this._balancingItemsFlag = true;\n      window.requestAnimationFrame(this._balancingItems.bind(this));\n    }\n    function onTransitionEnd() {\n      this._balancingItemsFlag = false;\n      this._$root.dispatchEvent(new CustomEvent('slider.transition.end',\n        { bubbles: true }));\n    }\n    function onMouseEnter() {\n      this._autoplay('stop');\n    }\n    function onMouseLeave() {\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    function onSwipeStart(e) {\n      this._autoplay('stop');\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      this._swipeStartPosX = event.clientX;\n      this._swipeStartPosY = event.clientY;\n      this._hasSwipeState = true;\n      this._hasSwiping = false;\n    }\n    function onSwipeMove(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      var diffPosY = this._swipeStartPosY - event.clientY;\n      if (!this._hasSwiping) {\n        if (Math.abs(diffPosY) > Math.abs(diffPosX)) {\n          this._hasSwipeState = false;\n          return;\n        }\n        this._hasSwiping = true;\n      }\n      e.preventDefault();\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._$itemList.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 4;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 4;\n        }\n      }\n      var value = (diffPosX / this._$wrapper.getBoundingClientRect().width) * 100;\n      var translateX = this._transform - value;\n      this._$items.classList.add(TRANSITION_NONE);\n      this._$items.style.transform = 'translateX('.concat(translateX, '%)');\n    }\n    function onSwipeEnd(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._$itemList.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 4;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 4;\n        }\n      }\n      var value = (diffPosX / this._$wrapper.getBoundingClientRect().width) * 100;\n      this._$items.classList.remove(TRANSITION_NONE);\n      if (value > SWIPE_THRESHOLD) {\n        this._direction = 'next';\n        this._move();\n      } else if (value < -SWIPE_THRESHOLD) {\n        this._direction = 'prev';\n        this._move();\n      } else {\n        this._direction = 'none';\n        this._move();\n      }\n      this._hasSwipeState = false;\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    function onDragStart(e) {\n      e.preventDefault();\n    }\n    function onVisibilityChange() {\n      if (document.visibilityState === 'hidden') {\n        this._autoplay('stop');\n      } else if (document.visibilityState === 'visible') {\n        if (this._config.loop) {\n          this._autoplay();\n        }\n      }\n    }\n    // click\n    this._$root.addEventListener('click', onClick.bind(this));\n    // transitionstart and transitionend\n    if (this._config.loop) {\n      $items.addEventListener('transitionstart', onTransitionStart.bind(this));\n      $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n    }\n    // mouseenter and mouseleave\n    if (this._config.autoplay) {\n      this._$root.addEventListener('mouseenter', onMouseEnter.bind(this));\n      this._$root.addEventListener('mouseleave', onMouseLeave.bind(this));\n    }\n    // swipe\n    if (this._config.swipe) {\n      var supportsPassive = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function () {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (err) { }\n      this._$root.addEventListener('touchstart', onSwipeStart.bind(this),\n        supportsPassive ? { passive: false } : false);\n      this._$root.addEventListener('touchmove', onSwipeMove.bind(this),\n        supportsPassive ? { passive: false } : false);\n      this._$root.addEventListener('mousedown', onSwipeStart.bind(this));\n      this._$root.addEventListener('mousemove', onSwipeMove.bind(this));\n      document.addEventListener('touchend', onSwipeEnd.bind(this));\n      document.addEventListener('mouseup', onSwipeEnd.bind(this));\n    }\n    this._$root.addEventListener('dragstart', onDragStart.bind(this));\n    // при изменении активности вкладки\n    document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n  }\n  // перейти к следующему слайду\n  next() {\n    this._direction = 'next';\n    this._move();\n  }\n  // перейти к предыдущему слайду\n  prev() {\n    this._direction = 'prev';\n    this._move();\n  }\n  // управление автоматической сменой слайдов\n  autoplay(action) {\n    this._autoplay('stop');\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"]}